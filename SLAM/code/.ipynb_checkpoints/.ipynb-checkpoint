{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The autoreload extension is already loaded. To reload it, use:\n",
      "  %reload_ext autoreload\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from data_utility.environment import *\n",
    "from data_utility.utility import *\n",
    "from slam_algorithms.robot import *\n",
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "%matplotlib inline\n",
    "\n",
    "plt.ion()\n",
    "plt.rcParams['figure.figsize'] = (12.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "env = Environment(n_landmarks=10)\n",
    "fig, ax = env.plot_env()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "robot's initial guess of landmark: {0: [196, 140], 1: [255, 56], 2: [8, 208], 3: [55, 271], 4: [136, 112], 5: [257, 142], 6: [336, 220], 7: [317, 49], 8: [28, 87], 9: [82, 292]}\n",
      "environment's landmark {0: [328, 64], 1: [244, 286], 2: [60, 74], 3: [242, 141], 4: [133, 36], 5: [99, 18], 6: [85, 187], 7: [178, 6], 8: [384, 269], 9: [375, 66]}\n",
      "---\n",
      "prior state:[ 90.19330384 115.5834396 ]\n",
      "post state:[ 92.11703773 116.36583986]\n",
      "---\n",
      "prior state:[ 92.11703773 116.36583986]\n",
      "post state:[ 97.1113836  107.50649785]\n",
      "---\n",
      "prior state:[ 97.1113836  107.50649785]\n",
      "post state:[ 98.21388053 104.47811739]\n",
      "---\n",
      "prior state:[ 98.21388053 104.47811739]\n",
      "post state:[ 98.62441183 103.17930376]\n",
      "---\n",
      "prior state:[ 98.62441183 103.17930376]\n",
      "post state:[ 99.04202618 102.53797764]\n",
      "---\n",
      "prior state:[ 99.04202618 102.53797764]\n",
      "post state:[ 98.89668656 102.09984103]\n",
      "---\n",
      "prior state:[ 98.89668656 102.09984103]\n",
      "post state:[ 99.09074024 101.64751153]\n",
      "---\n",
      "prior state:[ 99.09074024 101.64751153]\n",
      "post state:[ 99.11344416 101.50001336]\n",
      "---\n",
      "prior state:[ 99.11344416 101.50001336]\n",
      "post state:[ 99.03076528 101.16410458]\n",
      "---\n",
      "prior state:[ 99.03076528 101.16410458]\n",
      "post state:[ 98.97584178 101.12468234]\n",
      "---\n",
      "prior state:[ 98.97584178 101.12468234]\n",
      "post state:[ 99.11497448 101.12650775]\n",
      "---\n",
      "prior state:[ 99.11497448 101.12650775]\n",
      "post state:[ 99.28656508 101.1048856 ]\n",
      "---\n",
      "prior state:[ 99.28656508 101.1048856 ]\n",
      "post state:[ 99.20827902 101.0521354 ]\n",
      "---\n",
      "prior state:[ 99.20827902 101.0521354 ]\n",
      "post state:[ 99.46834213 100.82669572]\n",
      "---\n",
      "prior state:[ 99.46834213 100.82669572]\n",
      "post state:[ 99.51146615 100.74307405]\n",
      "---\n",
      "prior state:[ 99.51146615 100.74307405]\n",
      "post state:[ 99.54872614 100.71365586]\n",
      "---\n",
      "prior state:[ 99.54872614 100.71365586]\n",
      "post state:[ 99.59567953 100.59703237]\n",
      "---\n",
      "prior state:[ 99.59567953 100.59703237]\n",
      "post state:[ 99.52771513 100.4816775 ]\n",
      "---\n",
      "prior state:[ 99.52771513 100.4816775 ]\n",
      "post state:[ 99.48497052 100.44454022]\n",
      "---\n",
      "prior state:[ 99.48497052 100.44454022]\n",
      "post state:[ 99.5071931  100.38150805]\n",
      "---\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(<Figure size 864x576 with 1 Axes>,\n",
       " <matplotlib.axes._subplots.AxesSubplot at 0x1a29a18438>)"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Check Environment and robot's position\n",
    "\n",
    "Q = np.array([[15., 0],[0, 15.]])\n",
    "R = np.array([[10., 0],[0, 10.]])\n",
    "P = np.identity(2)*5\n",
    "s = np.array([100., 100.])\n",
    "rob = MyRobot(env=env, Q=Q, R=R, s0=s, P0=P)\n",
    "print(\"robot's initial guess of landmark: {}\".format(rob.landmarks))\n",
    "print(\"environment's landmark {}\".format(rob.env.landmarks))\n",
    "print(\"---\")\n",
    "\n",
    "ob = rob.observation_update(s=s)\n",
    "s_prior = s + 50*np.random.randn(2)\n",
    "for _ in range(20):\n",
    "    s_true, s_prior = rob.time_update(s=s_prior, u=None)\n",
    "    s_post = rob.map_construction(s=s_prior, ob=ob)\n",
    "    ob = rob.observation_update(s=s_post)\n",
    "    s_prior = s_post\n",
    "    print(\"---\")\n",
    "rob.visualize()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
